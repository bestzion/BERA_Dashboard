"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/lib/zapper.ts":
/*!***************************!*\
  !*** ./src/lib/zapper.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTokenChange24h: () => (/* binding */ fetchTokenChange24h),\n/* harmony export */   fetchZapperPortfolio: () => (/* binding */ fetchZapperPortfolio)\n/* harmony export */ });\n// src/lib/zapper.ts\nconst API_URL = \"https://public.zapper.xyz/graphql\";\nasync function fetchZapperPortfolio(userAddress) {\n    let first = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    const query = \"\\n    query PortfolioV2($addresses: [Address!]!, $networks: [Network!]!, $first: Int!) {\\n      portfolioV2(addresses: $addresses, networks: $networks) {\\n        tokenBalances {\\n          byToken(first: $first) {\\n            edges {\\n              node {\\n                address\\n                symbol\\n                name\\n                balance\\n                balanceUSD\\n                price\\n                imgUrlV2\\n                network { name chainId }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \";\n    const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-zapper-api-key\": apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables: {\n                addresses: [\n                    userAddress\n                ],\n                networks: [\n                    \"BERACHAIN_MAINNET\"\n                ],\n                first\n            }\n        })\n    });\n    if (!res.ok) {\n        const txt = await res.text();\n        console.error(\"Portfolio 오류:\", txt);\n        throw new Error(\"포트폴리오 조회 오류\");\n    }\n    const json = await res.json();\n    if (json.errors) {\n        console.error(\"Portfolio GraphQL 오류:\", json.errors);\n        throw new Error(\"포트폴리오 GraphQL 오류\");\n    }\n    return json.data.portfolioV2.tokenBalances.byToken.edges.map((e)=>e.node);\n}\nasync function fetchTokenChange24h(tokenAddress, chainId) {\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    const query = \"\\n    query TokenPriceChange($address: Address!, $chainId: Int!) {\\n      fungibleTokenV2(address: $address, chainId: $chainId) {\\n        price {\\n          change24h\\n        }\\n      }\\n    }\\n  \";\n    const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-zapper-api-key\": apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables: {\n                address: tokenAddress,\n                chainId\n            }\n        })\n    });\n    if (!res.ok) {\n        const txt = await res.text();\n        console.error(\"PriceChange 오류:\", txt);\n        throw new Error(\"변동량 조회 오류\");\n    }\n    const json = await res.json();\n    if (json.errors) {\n        console.error(\"PriceChange GraphQL 오류:\", json.errors);\n        throw new Error(\"변동량 GraphQL 오류\");\n    }\n    var _json_data_fungibleTokenV2_price_change24h;\n    // 없으면 0으로\n    return (_json_data_fungibleTokenV2_price_change24h = json.data.fungibleTokenV2.price.change24h) !== null && _json_data_fungibleTokenV2_price_change24h !== void 0 ? _json_data_fungibleTokenV2_price_change24h : 0;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9saWIvemFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0JBQW9CO0FBWXBCLE1BQU1BLFVBQVU7QUFFVCxlQUFlQyxxQkFDcEJDLFdBQW1CO1FBQ25CQyxRQUFBQSxpRUFBZ0I7SUFFaEIsTUFBTUMsU0FBU0Msc0NBQXNDO0lBQ3JELE1BQU1HLFFBQVM7SUFzQmYsTUFBTUMsTUFBTSxNQUFNQyxNQUFNVixTQUFTO1FBQy9CVyxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxnQkFBb0I7WUFDcEIsb0JBQW9CUjtRQUN0QjtRQUNBUyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFDbkJQO1lBQ0FRLFdBQVc7Z0JBQ1RDLFdBQVc7b0JBQUNmO2lCQUFZO2dCQUN4QmdCLFVBQVc7b0JBQUM7aUJBQW9CO2dCQUNoQ2Y7WUFDRjtRQUNGO0lBQ0Y7SUFDQSxJQUFJLENBQUNNLElBQUlVLEVBQUUsRUFBRTtRQUNYLE1BQU1DLE1BQU0sTUFBTVgsSUFBSVksSUFBSTtRQUMxQkMsUUFBUUMsS0FBSyxDQUFDLGlCQUFpQkg7UUFDL0IsTUFBTSxJQUFJSSxNQUFNO0lBQ2xCO0lBQ0EsTUFBTUMsT0FBTyxNQUFNaEIsSUFBSWdCLElBQUk7SUFDM0IsSUFBSUEsS0FBS0MsTUFBTSxFQUFFO1FBQ2ZKLFFBQVFDLEtBQUssQ0FBQyx5QkFBeUJFLEtBQUtDLE1BQU07UUFDbEQsTUFBTSxJQUFJRixNQUFNO0lBQ2xCO0lBQ0EsT0FBT0MsS0FBS0UsSUFBSSxDQUFDQyxXQUFXLENBQUNDLGFBQWEsQ0FBQ0MsT0FBTyxDQUFDQyxLQUFLLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxJQUFXQSxFQUFFQyxJQUFJO0FBQ2pGO0FBRU8sZUFBZUMsb0JBQ3BCQyxZQUFvQixFQUNwQkMsT0FBZTtJQUVmLE1BQU1qQyxTQUFTQyxzQ0FBc0M7SUFDckQsTUFBTUcsUUFBUztJQVNmLE1BQU1DLE1BQU0sTUFBTUMsTUFBTVYsU0FBUztRQUMvQlcsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQW9CO1lBQ3BCLG9CQUFvQlI7UUFDdEI7UUFDQVMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ25CUDtZQUNBUSxXQUFXO2dCQUFFc0IsU0FBU0Y7Z0JBQWNDO1lBQVE7UUFDOUM7SUFDRjtJQUNBLElBQUksQ0FBQzVCLElBQUlVLEVBQUUsRUFBRTtRQUNYLE1BQU1DLE1BQU0sTUFBTVgsSUFBSVksSUFBSTtRQUMxQkMsUUFBUUMsS0FBSyxDQUFDLG1CQUFtQkg7UUFDakMsTUFBTSxJQUFJSSxNQUFNO0lBQ2xCO0lBQ0EsTUFBTUMsT0FBTyxNQUFNaEIsSUFBSWdCLElBQUk7SUFDM0IsSUFBSUEsS0FBS0MsTUFBTSxFQUFFO1FBQ2ZKLFFBQVFDLEtBQUssQ0FBQywyQkFBMkJFLEtBQUtDLE1BQU07UUFDcEQsTUFBTSxJQUFJRixNQUFNO0lBQ2xCO1FBRU9DO0lBRFAsVUFBVTtJQUNWLE9BQU9BLENBQUFBLDZDQUFBQSxLQUFLRSxJQUFJLENBQUNZLGVBQWUsQ0FBQ0MsS0FBSyxDQUFDQyxTQUFTLGNBQXpDaEIsd0RBQUFBLDZDQUE2QztBQUN0RCIsInNvdXJjZXMiOlsiL1VzZXJzL3NoaW9obi9Qcm9qZWN0L2RlZmktbW9uaXRvci9zcmMvbGliL3phcHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3phcHBlci50c1xuXG5leHBvcnQgaW50ZXJmYWNlIFphcHBlclRva2VuTm9kZSB7XG4gIGFkZHJlc3M6ICAgIHN0cmluZztcbiAgc3ltYm9sOiAgICAgc3RyaW5nO1xuICBuYW1lOiAgICAgICBzdHJpbmc7XG4gIGJhbGFuY2U6ICAgIG51bWJlcjtcbiAgYmFsYW5jZVVTRDogbnVtYmVyO1xuICBwcmljZTogICAgICBudW1iZXI7XG4gIGltZ1VybFYyOiAgIHN0cmluZztcbiAgbmV0d29yazogICAgeyBuYW1lOiBzdHJpbmc7IGNoYWluSWQ6IG51bWJlciB9O1xufVxuY29uc3QgQVBJX1VSTCA9IFwiaHR0cHM6Ly9wdWJsaWMuemFwcGVyLnh5ei9ncmFwaHFsXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFphcHBlclBvcnRmb2xpbyhcbiAgdXNlckFkZHJlc3M6IHN0cmluZyxcbiAgZmlyc3Q6IG51bWJlciA9IDUwXG4pOiBQcm9taXNlPFphcHBlclRva2VuTm9kZVtdPiB7XG4gIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZITtcbiAgY29uc3QgcXVlcnkgPSBgXG4gICAgcXVlcnkgUG9ydGZvbGlvVjIoJGFkZHJlc3NlczogW0FkZHJlc3MhXSEsICRuZXR3b3JrczogW05ldHdvcmshXSEsICRmaXJzdDogSW50ISkge1xuICAgICAgcG9ydGZvbGlvVjIoYWRkcmVzc2VzOiAkYWRkcmVzc2VzLCBuZXR3b3JrczogJG5ldHdvcmtzKSB7XG4gICAgICAgIHRva2VuQmFsYW5jZXMge1xuICAgICAgICAgIGJ5VG9rZW4oZmlyc3Q6ICRmaXJzdCkge1xuICAgICAgICAgICAgZWRnZXMge1xuICAgICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzXG4gICAgICAgICAgICAgICAgc3ltYm9sXG4gICAgICAgICAgICAgICAgbmFtZVxuICAgICAgICAgICAgICAgIGJhbGFuY2VcbiAgICAgICAgICAgICAgICBiYWxhbmNlVVNEXG4gICAgICAgICAgICAgICAgcHJpY2VcbiAgICAgICAgICAgICAgICBpbWdVcmxWMlxuICAgICAgICAgICAgICAgIG5ldHdvcmsgeyBuYW1lIGNoYWluSWQgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBgO1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChBUElfVVJMLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiAgICAgXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBcIngtemFwcGVyLWFwaS1rZXlcIjogYXBpS2V5LFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcXVlcnksXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgYWRkcmVzc2VzOiBbdXNlckFkZHJlc3NdLFxuICAgICAgICBuZXR3b3JrczogIFtcIkJFUkFDSEFJTl9NQUlOTkVUXCJdLFxuICAgICAgICBmaXJzdCxcbiAgICAgIH0sXG4gICAgfSksXG4gIH0pO1xuICBpZiAoIXJlcy5vaykge1xuICAgIGNvbnN0IHR4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgY29uc29sZS5lcnJvcihcIlBvcnRmb2xpbyDsmKTrpZg6XCIsIHR4dCk7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwi7Y+s7Yq47Y+066as7JikIOyhsO2ajCDsmKTrpZhcIik7XG4gIH1cbiAgY29uc3QganNvbiA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIGlmIChqc29uLmVycm9ycykge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJQb3J0Zm9saW8gR3JhcGhRTCDsmKTrpZg6XCIsIGpzb24uZXJyb3JzKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCLtj6ztirjtj7TrpqzsmKQgR3JhcGhRTCDsmKTrpZhcIik7XG4gIH1cbiAgcmV0dXJuIGpzb24uZGF0YS5wb3J0Zm9saW9WMi50b2tlbkJhbGFuY2VzLmJ5VG9rZW4uZWRnZXMubWFwKChlOiBhbnkpID0+IGUubm9kZSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFRva2VuQ2hhbmdlMjRoKFxuICB0b2tlbkFkZHJlc3M6IHN0cmluZyxcbiAgY2hhaW5JZDogbnVtYmVyXG4pOiBQcm9taXNlPG51bWJlcj4ge1xuICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19aQVBQRVJfQVBJX0tFWSE7XG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIHF1ZXJ5IFRva2VuUHJpY2VDaGFuZ2UoJGFkZHJlc3M6IEFkZHJlc3MhLCAkY2hhaW5JZDogSW50ISkge1xuICAgICAgZnVuZ2libGVUb2tlblYyKGFkZHJlc3M6ICRhZGRyZXNzLCBjaGFpbklkOiAkY2hhaW5JZCkge1xuICAgICAgICBwcmljZSB7XG4gICAgICAgICAgY2hhbmdlMjRoXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGA7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKEFQSV9VUkwsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6ICAgICBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIFwieC16YXBwZXItYXBpLWtleVwiOiBhcGlLZXksXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBxdWVyeSxcbiAgICAgIHZhcmlhYmxlczogeyBhZGRyZXNzOiB0b2tlbkFkZHJlc3MsIGNoYWluSWQgfSxcbiAgICB9KSxcbiAgfSk7XG4gIGlmICghcmVzLm9rKSB7XG4gICAgY29uc3QgdHh0ID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICBjb25zb2xlLmVycm9yKFwiUHJpY2VDaGFuZ2Ug7Jik66WYOlwiLCB0eHQpO1xuICAgIHRocm93IG5ldyBFcnJvcihcIuuzgOuPmeufiSDsobDtmowg7Jik66WYXCIpO1xuICB9XG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xuICBpZiAoanNvbi5lcnJvcnMpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUHJpY2VDaGFuZ2UgR3JhcGhRTCDsmKTrpZg6XCIsIGpzb24uZXJyb3JzKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCLrs4Drj5nrn4kgR3JhcGhRTCDsmKTrpZhcIik7XG4gIH1cbiAgLy8g7JeG7Jy866m0IDDsnLzroZxcbiAgcmV0dXJuIGpzb24uZGF0YS5mdW5naWJsZVRva2VuVjIucHJpY2UuY2hhbmdlMjRoID8/IDA7XG59XG4iXSwibmFtZXMiOlsiQVBJX1VSTCIsImZldGNoWmFwcGVyUG9ydGZvbGlvIiwidXNlckFkZHJlc3MiLCJmaXJzdCIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19aQVBQRVJfQVBJX0tFWSIsInF1ZXJ5IiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2YXJpYWJsZXMiLCJhZGRyZXNzZXMiLCJuZXR3b3JrcyIsIm9rIiwidHh0IiwidGV4dCIsImNvbnNvbGUiLCJlcnJvciIsIkVycm9yIiwianNvbiIsImVycm9ycyIsImRhdGEiLCJwb3J0Zm9saW9WMiIsInRva2VuQmFsYW5jZXMiLCJieVRva2VuIiwiZWRnZXMiLCJtYXAiLCJlIiwibm9kZSIsImZldGNoVG9rZW5DaGFuZ2UyNGgiLCJ0b2tlbkFkZHJlc3MiLCJjaGFpbklkIiwiYWRkcmVzcyIsImZ1bmdpYmxlVG9rZW5WMiIsInByaWNlIiwiY2hhbmdlMjRoIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/zapper.ts\n"));

/***/ })

});