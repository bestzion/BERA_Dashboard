"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/lib/zapper.ts":
/*!***************************!*\
  !*** ./src/lib/zapper.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchZapperPortfolio: () => (/* binding */ fetchZapperPortfolio)\n/* harmony export */ });\n// src/lib/zapper.ts\nasync function fetchZapperPortfolio(address) {\n    const API_URL = 'https://public.zapper.xyz/graphql';\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    const query = \"\\n      query PortfolioV2($addresses: [Address!]!, $networks: [Network!]!) {\\n        portfolioV2(addresses: $addresses, networks: $networks) {\\n          tokenBalances {\\n            byToken {\\n              edges {\\n                node {\\n                  symbol\\n                  name\\n                  balance\\n                  balanceUSD\\n                  price\\n                  imgUrlV2\\n                  network { name }\\n                  address           # 토큰 컨트랙트 주소\\n                  network { chainId } # 체인 ID\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    \";\n    // 1. 지갑 포트폴리오 조회\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-zapper-api-key': apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables: {\n                addresses: [\n                    address\n                ],\n                networks: [\n                    'BERACHAIN_MAINNET'\n                ]\n            }\n        })\n    });\n    if (!res.ok) throw new Error(\"Zapper Portfolio 오류: \".concat(res.statusText));\n    const { data, errors } = await res.json();\n    if (errors) throw new Error('Zapper Portfolio GraphQL 오류');\n    // 2. 24h 변동량을 별도 Onchain Prices 엔드포인트에서 병렬로 가져오기\n    const nodes = data.portfolioV2.tokenBalances.byToken.edges.map((e)=>e.node);\n    const withChange = await Promise.all(nodes.map(async (n)=>{\n        var _priceData_fungibleTokenV2_price, _priceData_fungibleTokenV2;\n        // fungibleTokenV2 호출\n        const priceRes = await fetch('https://public.zapper.xyz/graphql', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-zapper-api-key': apiKey\n            },\n            body: JSON.stringify({\n                query: \"\\n              query Price($address: String!, $chainId: Int!) {\\n                fungibleTokenV2(address: $address, chainId: $chainId) {\\n                  price {\\n                    change24h\\n                  }\\n                }\\n              }\\n            \",\n                variables: {\n                    address: n.address,\n                    chainId: n.chainId\n                }\n            })\n        });\n        const { data: priceData } = await priceRes.json();\n        var _priceData_fungibleTokenV2_price_change24h;\n        const change24h = (_priceData_fungibleTokenV2_price_change24h = (_priceData_fungibleTokenV2 = priceData.fungibleTokenV2) === null || _priceData_fungibleTokenV2 === void 0 ? void 0 : (_priceData_fungibleTokenV2_price = _priceData_fungibleTokenV2.price) === null || _priceData_fungibleTokenV2_price === void 0 ? void 0 : _priceData_fungibleTokenV2_price.change24h) !== null && _priceData_fungibleTokenV2_price_change24h !== void 0 ? _priceData_fungibleTokenV2_price_change24h : 0;\n        return {\n            symbol: n.symbol,\n            name: n.name,\n            balance: n.balance,\n            balanceUSD: n.balanceUSD,\n            price: n.price,\n            imgUrlV2: n.imgUrlV2,\n            network: n.network,\n            change24h\n        };\n    }));\n    return withChange;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9saWIvemFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxvQkFBb0I7QUF5QlgsZUFBZUEscUJBQXFCQyxPQUFlO0lBQ3hELE1BQU1DLFVBQVU7SUFDaEIsTUFBTUMsU0FBVUMsc0NBQXNDO0lBQ3RELE1BQU1HLFFBQVM7SUF1QmYsaUJBQWlCO0lBQ2pCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTVAsU0FBUztRQUMvQlEsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQW9CO1lBQ3BCLG9CQUFvQlI7UUFDdEI7UUFDQVMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ25CUDtZQUNBUSxXQUFXO2dCQUNUQyxXQUFXO29CQUFDZjtpQkFBUTtnQkFDcEJnQixVQUFVO29CQUFDO2lCQUFvQjtZQUNqQztRQUNGO0lBQ0Y7SUFDQSxJQUFJLENBQUNULElBQUlVLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sd0JBQXVDLE9BQWZYLElBQUlZLFVBQVU7SUFDbkUsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFJLE1BQU1kLElBQUllLElBQUk7SUFDeEMsSUFBSUQsUUFBUSxNQUFNLElBQUlILE1BQU07SUFFNUIsaURBQWlEO0lBQ2pELE1BQU1LLFFBQVFILEtBQUtJLFdBQVcsQ0FBQ0MsYUFBYSxDQUFDQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJO0lBQzFFLE1BQU1DLGFBQWEsTUFBTUMsUUFBUUMsR0FBRyxDQUNsQ1YsTUFBTUssR0FBRyxDQUFDLE9BQU1NO1lBeUJJQyxrQ0FBQUE7UUF4QmxCLHFCQUFxQjtRQUNyQixNQUFNQyxXQUFXLE1BQU01QixNQUFNLHFDQUFxQztZQUNoRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFvQjtnQkFDcEIsb0JBQW9CUjtZQUN0QjtZQUNBUyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CUCxPQUFRO2dCQVNSUSxXQUFXO29CQUNUZCxTQUFTa0MsRUFBRWxDLE9BQU87b0JBQ2xCcUMsU0FBU0gsRUFBRUcsT0FBTztnQkFDcEI7WUFDRjtRQUNGO1FBQ0EsTUFBTSxFQUFFakIsTUFBTWUsU0FBUyxFQUFFLEdBQUcsTUFBTUMsU0FBU2QsSUFBSTtZQUM3QmE7UUFBbEIsTUFBTUcsWUFBWUgsQ0FBQUEsOENBQUFBLDZCQUFBQSxVQUFVSSxlQUFlLGNBQXpCSixrREFBQUEsbUNBQUFBLDJCQUEyQkssS0FBSyxjQUFoQ0wsdURBQUFBLGlDQUFrQ0csU0FBUyxjQUEzQ0gsd0RBQUFBLDZDQUErQztRQUNqRSxPQUFPO1lBQ0xNLFFBQWlCUCxFQUFFTyxNQUFNO1lBQ3pCQyxNQUFpQlIsRUFBRVEsSUFBSTtZQUN2QkMsU0FBaUJULEVBQUVTLE9BQU87WUFDMUJDLFlBQWlCVixFQUFFVSxVQUFVO1lBQzdCSixPQUFpQk4sRUFBRU0sS0FBSztZQUN4QkssVUFBaUJYLEVBQUVXLFFBQVE7WUFDM0JDLFNBQWlCWixFQUFFWSxPQUFPO1lBQzFCUjtRQUNGO0lBQ0Y7SUFHRixPQUFPUDtBQUNUIiwic291cmNlcyI6WyIvVXNlcnMvc2hpb2huL1Byb2plY3QvZGVmaS1tb25pdG9yL3NyYy9saWIvemFwcGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvemFwcGVyLnRzXG5leHBvcnQgaW50ZXJmYWNlIFphcHBlclRva2VuTm9kZSB7XG4gICAgc3ltYm9sOiAgICAgIHN0cmluZztcbiAgICBuYW1lOiAgICAgICAgc3RyaW5nO1xuICAgIGJhbGFuY2U6ICAgICBudW1iZXI7XG4gICAgYmFsYW5jZVVTRDogIG51bWJlcjtcbiAgICBwcmljZTogICAgICAgbnVtYmVyO1xuICAgIGltZ1VybFYyOiAgICBzdHJpbmc7XG4gICAgbmV0d29yazogICAgIHsgbmFtZTogc3RyaW5nIH07XG4gICAgY2hhbmdlMjRoOiAgIG51bWJlcjsgICAgLy8g4oaQIOyLoOq3nCDtlYTrk5xcbiAgICBjb250cmFjdEFkZHJlc3M6IHN0cmluZzsgLy8gZnVuZ2libGVQcmljZSDtmLjstpzsl5Ag7ZWE7JqUXG4gIH1cbiAgXG4gIGludGVyZmFjZSBaYXBwZXJQb3J0Zm9saW9SZXNwb25zZSB7XG4gICAgZGF0YToge1xuICAgICAgcG9ydGZvbGlvVjI6IHtcbiAgICAgICAgdG9rZW5CYWxhbmNlczoge1xuICAgICAgICAgIGJ5VG9rZW46IHtcbiAgICAgICAgICAgIGVkZ2VzOiB7IG5vZGU6IE9taXQ8WmFwcGVyVG9rZW5Ob2RlLCdjaGFuZ2UyNGgnfCdjb250cmFjdEFkZHJlc3MnPiAmIHsgYWRkcmVzczogc3RyaW5nOyBjaGFpbklkOiBudW1iZXIgfSB9W107XG4gICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgIH07XG4gICAgfTtcbiAgfVxuICBcbiAgZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoWmFwcGVyUG9ydGZvbGlvKGFkZHJlc3M6IHN0cmluZyk6IFByb21pc2U8WmFwcGVyVG9rZW5Ob2RlW10+IHtcbiAgICBjb25zdCBBUElfVVJMID0gJ2h0dHBzOi8vcHVibGljLnphcHBlci54eXovZ3JhcGhxbCc7XG4gICAgY29uc3QgYXBpS2V5ICA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZITtcbiAgICBjb25zdCBxdWVyeSA9IGBcbiAgICAgIHF1ZXJ5IFBvcnRmb2xpb1YyKCRhZGRyZXNzZXM6IFtBZGRyZXNzIV0hLCAkbmV0d29ya3M6IFtOZXR3b3JrIV0hKSB7XG4gICAgICAgIHBvcnRmb2xpb1YyKGFkZHJlc3NlczogJGFkZHJlc3NlcywgbmV0d29ya3M6ICRuZXR3b3Jrcykge1xuICAgICAgICAgIHRva2VuQmFsYW5jZXMge1xuICAgICAgICAgICAgYnlUb2tlbiB7XG4gICAgICAgICAgICAgIGVkZ2VzIHtcbiAgICAgICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgICAgIHN5bWJvbFxuICAgICAgICAgICAgICAgICAgbmFtZVxuICAgICAgICAgICAgICAgICAgYmFsYW5jZVxuICAgICAgICAgICAgICAgICAgYmFsYW5jZVVTRFxuICAgICAgICAgICAgICAgICAgcHJpY2VcbiAgICAgICAgICAgICAgICAgIGltZ1VybFYyXG4gICAgICAgICAgICAgICAgICBuZXR3b3JrIHsgbmFtZSB9XG4gICAgICAgICAgICAgICAgICBhZGRyZXNzICAgICAgICAgICAjIO2GoO2BsCDsu6jtirjrnpntirgg7KO87IaMXG4gICAgICAgICAgICAgICAgICBuZXR3b3JrIHsgY2hhaW5JZCB9ICMg7LK07J24IElEXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgYDtcbiAgICAvLyAxLiDsp4DqsJEg7Y+s7Yq47Y+066as7JikIOyhsO2ajFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKEFQSV9VUkwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogICAgICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ3gtemFwcGVyLWFwaS1rZXknOiBhcGlLZXksXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBxdWVyeSxcbiAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgYWRkcmVzc2VzOiBbYWRkcmVzc10sXG4gICAgICAgICAgbmV0d29ya3M6IFsnQkVSQUNIQUlOX01BSU5ORVQnXSwgLy8g7ZWE7JqU7JeQIOuUsOudvCDrqYDti7Ag7LK07J247Jy866GcIO2ZleyepVxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihgWmFwcGVyIFBvcnRmb2xpbyDsmKTrpZg6ICR7cmVzLnN0YXR1c1RleHR9YCk7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvcnMgfSA9IChhd2FpdCByZXMuanNvbigpKSBhcyBaYXBwZXJQb3J0Zm9saW9SZXNwb25zZSAmIHsgZXJyb3JzPzogYW55IH07XG4gICAgaWYgKGVycm9ycykgdGhyb3cgbmV3IEVycm9yKCdaYXBwZXIgUG9ydGZvbGlvIEdyYXBoUUwg7Jik66WYJyk7XG4gIFxuICAgIC8vIDIuIDI0aCDrs4Drj5nrn4nsnYQg67OE64+EIE9uY2hhaW4gUHJpY2VzIOyXlOuTnO2PrOyduO2KuOyXkOyEnCDrs5HroKzroZwg6rCA7KC47Jik6riwXG4gICAgY29uc3Qgbm9kZXMgPSBkYXRhLnBvcnRmb2xpb1YyLnRva2VuQmFsYW5jZXMuYnlUb2tlbi5lZGdlcy5tYXAoZSA9PiBlLm5vZGUpO1xuICAgIGNvbnN0IHdpdGhDaGFuZ2UgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgIG5vZGVzLm1hcChhc3luYyBuID0+IHtcbiAgICAgICAgLy8gZnVuZ2libGVUb2tlblYyIO2YuOy2nFxuICAgICAgICBjb25zdCBwcmljZVJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL3B1YmxpYy56YXBwZXIueHl6L2dyYXBocWwnLCB7XG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICAgICAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAneC16YXBwZXItYXBpLWtleSc6IGFwaUtleSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHF1ZXJ5OiBgXG4gICAgICAgICAgICAgIHF1ZXJ5IFByaWNlKCRhZGRyZXNzOiBTdHJpbmchLCAkY2hhaW5JZDogSW50ISkge1xuICAgICAgICAgICAgICAgIGZ1bmdpYmxlVG9rZW5WMihhZGRyZXNzOiAkYWRkcmVzcywgY2hhaW5JZDogJGNoYWluSWQpIHtcbiAgICAgICAgICAgICAgICAgIHByaWNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlMjRoXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgLFxuICAgICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgIGFkZHJlc3M6IG4uYWRkcmVzcyxcbiAgICAgICAgICAgICAgY2hhaW5JZDogbi5jaGFpbklkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHsgZGF0YTogcHJpY2VEYXRhIH0gPSBhd2FpdCBwcmljZVJlcy5qc29uKCkgYXMgeyBkYXRhOiBhbnkgfTtcbiAgICAgICAgY29uc3QgY2hhbmdlMjRoID0gcHJpY2VEYXRhLmZ1bmdpYmxlVG9rZW5WMj8ucHJpY2U/LmNoYW5nZTI0aCA/PyAwO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN5bWJvbDogICAgICAgICAgbi5zeW1ib2wsXG4gICAgICAgICAgbmFtZTogICAgICAgICAgICBuLm5hbWUsXG4gICAgICAgICAgYmFsYW5jZTogICAgICAgICBuLmJhbGFuY2UsXG4gICAgICAgICAgYmFsYW5jZVVTRDogICAgICBuLmJhbGFuY2VVU0QsXG4gICAgICAgICAgcHJpY2U6ICAgICAgICAgICBuLnByaWNlLFxuICAgICAgICAgIGltZ1VybFYyOiAgICAgICAgbi5pbWdVcmxWMixcbiAgICAgICAgICBuZXR3b3JrOiAgICAgICAgIG4ubmV0d29yayxcbiAgICAgICAgICBjaGFuZ2UyNGgsXG4gICAgICAgIH0gYXMgWmFwcGVyVG9rZW5Ob2RlO1xuICAgICAgfSlcbiAgICApO1xuICBcbiAgICByZXR1cm4gd2l0aENoYW5nZTtcbiAgfVxuICAiXSwibmFtZXMiOlsiZmV0Y2haYXBwZXJQb3J0Zm9saW8iLCJhZGRyZXNzIiwiQVBJX1VSTCIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19aQVBQRVJfQVBJX0tFWSIsInF1ZXJ5IiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2YXJpYWJsZXMiLCJhZGRyZXNzZXMiLCJuZXR3b3JrcyIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImVycm9ycyIsImpzb24iLCJub2RlcyIsInBvcnRmb2xpb1YyIiwidG9rZW5CYWxhbmNlcyIsImJ5VG9rZW4iLCJlZGdlcyIsIm1hcCIsImUiLCJub2RlIiwid2l0aENoYW5nZSIsIlByb21pc2UiLCJhbGwiLCJuIiwicHJpY2VEYXRhIiwicHJpY2VSZXMiLCJjaGFpbklkIiwiY2hhbmdlMjRoIiwiZnVuZ2libGVUb2tlblYyIiwicHJpY2UiLCJzeW1ib2wiLCJuYW1lIiwiYmFsYW5jZSIsImJhbGFuY2VVU0QiLCJpbWdVcmxWMiIsIm5ldHdvcmsiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/zapper.ts\n"));

/***/ })

});