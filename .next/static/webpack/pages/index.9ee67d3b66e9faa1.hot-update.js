"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/lib/zapper.ts":
/*!***************************!*\
  !*** ./src/lib/zapper.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchZapperAppBalances: () => (/* binding */ fetchZapperAppBalances)\n/* harmony export */ });\n// src/lib/zapper.ts\n// 공통 GraphQL 엔드포인트\nconst API_URL = 'https://public.zapper.xyz/graphql';\n/**\n * DeFi 앱 포지션(App Balance) 조회\n */ async function fetchZapperAppBalances(address) {\n    let first = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 20;\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    if (!apiKey) throw new Error('Zapper API 키가 없습니다.');\n    const query = \"\\n    query AppBalances($addresses: [Address!]!, $first: Int!) {\\n      portfolioV2(addresses: $addresses) {\\n        appBalances {\\n          byApp(first: $first) {\\n            edges {\\n              node {\\n                balanceUSD\\n                app {\\n                  displayName\\n                  imgUrl\\n                }\\n                network {\\n                  name\\n                }\\n                positionBalances(first: $first) {\\n                  edges {\\n                    node {\\n                      ... on AppTokenPositionBalance {\\n                        type\\n                        groupLabel\\n                        balanceUSD\\n                        price\\n                        tokens {\\n                          symbol\\n                          price\\n                        }\\n                      }\\n                      ... on ContractPositionBalance {\\n                        type\\n                        groupLabel\\n                        balanceUSD\\n                        tokens {\\n                          token {\\n                            symbol\\n                            price\\n                          }\\n                        }\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \";\n    const variables = {\n        addresses: [\n            address\n        ],\n        first\n    };\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-zapper-api-key': apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables\n        })\n    });\n    if (!res.ok) {\n        const text = await res.text();\n        console.error('Zapper AppBalances 오류:', text);\n        throw new Error(\"Zapper API 오류: \".concat(res.statusText));\n    }\n    const { data, errors } = await res.json();\n    if (errors) {\n        console.error('GraphQL AppBalances 오류:', errors);\n        throw new Error('Zapper AppBalances 조회 중 GraphQL 오류 발생');\n    }\n    return data.portfolioV2.appBalances.byApp.edges.map((e)=>{\n        const node = e.node;\n        return {\n            displayName: node.app.displayName,\n            logoUrl: node.app.imgUrl,\n            network: node.network.name,\n            balanceUSD: node.balanceUSD,\n            positions: node.positionBalances.edges.map((p)=>({\n                    type: p.node.type,\n                    groupLabel: p.node.groupLabel,\n                    tokens: p.node.tokens.map((t)=>({\n                            symbol: t.symbol || t.token.symbol,\n                            price: t.price || t.token.price\n                        }))\n                }))\n        };\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9saWIvemFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxvQkFBb0I7QUF3Q3BCLG1CQUFtQjtBQUNuQixNQUFNQSxVQUFVO0FBRWhCOztDQUVDLEdBQ00sZUFBZUMsdUJBQ3BCQyxPQUFlO1FBQ2ZDLFFBQUFBLGlFQUFnQjtJQUVoQixNQUFNQyxTQUFTQyxzQ0FBc0M7SUFDckQsSUFBSSxDQUFDRCxRQUFRLE1BQU0sSUFBSUksTUFBTTtJQUU3QixNQUFNQyxRQUFTO0lBa0RmLE1BQU1DLFlBQVk7UUFDaEJDLFdBQVc7WUFBQ1Q7U0FBUTtRQUNwQkM7SUFDRjtJQUVBLE1BQU1TLE1BQU0sTUFBTUMsTUFBTWIsU0FBUztRQUMvQmMsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1lBQ2hCLG9CQUFvQlg7UUFDdEI7UUFDQVksTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVUO1lBQU9DO1FBQVU7SUFDMUM7SUFFQSxJQUFJLENBQUNFLElBQUlPLEVBQUUsRUFBRTtRQUNYLE1BQU1DLE9BQU8sTUFBTVIsSUFBSVEsSUFBSTtRQUMzQkMsUUFBUUMsS0FBSyxDQUFDLDBCQUEwQkY7UUFDeEMsTUFBTSxJQUFJWixNQUFNLGtCQUFpQyxPQUFmSSxJQUFJVyxVQUFVO0lBQ2xEO0lBRUEsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1iLElBQUljLElBQUk7SUFDdkMsSUFBSUQsUUFBUTtRQUNWSixRQUFRQyxLQUFLLENBQUMsMkJBQTJCRztRQUN6QyxNQUFNLElBQUlqQixNQUFNO0lBQ2xCO0lBRUEsT0FBT2dCLEtBQUtHLFdBQVcsQ0FBQ0MsV0FBVyxDQUFDQyxLQUFLLENBQUNDLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLENBQUNDO1FBQ25ELE1BQU1DLE9BQU9ELEVBQUVDLElBQUk7UUFDbkIsT0FBTztZQUNMQyxhQUFhRCxLQUFLRSxHQUFHLENBQUNELFdBQVc7WUFDakNFLFNBQVNILEtBQUtFLEdBQUcsQ0FBQ0UsTUFBTTtZQUN4QkMsU0FBU0wsS0FBS0ssT0FBTyxDQUFDQyxJQUFJO1lBQzFCQyxZQUFZUCxLQUFLTyxVQUFVO1lBQzNCQyxXQUFXUixLQUFLUyxnQkFBZ0IsQ0FBQ1osS0FBSyxDQUFDQyxHQUFHLENBQUMsQ0FBQ1ksSUFBWTtvQkFDdERDLE1BQU1ELEVBQUVWLElBQUksQ0FBQ1csSUFBSTtvQkFDakJDLFlBQVlGLEVBQUVWLElBQUksQ0FBQ1ksVUFBVTtvQkFDN0JDLFFBQVFILEVBQUVWLElBQUksQ0FBQ2EsTUFBTSxDQUFDZixHQUFHLENBQUMsQ0FBQ2dCLElBQVk7NEJBQ3JDQyxRQUFRRCxFQUFFQyxNQUFNLElBQUlELEVBQUVFLEtBQUssQ0FBQ0QsTUFBTTs0QkFDbENFLE9BQU9ILEVBQUVHLEtBQUssSUFBSUgsRUFBRUUsS0FBSyxDQUFDQyxLQUFLO3dCQUNqQztnQkFDRjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3NoaW9obi9Qcm9qZWN0L2RlZmktbW9uaXRvci9zcmMvbGliL3phcHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3phcHBlci50c1xuXG5leHBvcnQgaW50ZXJmYWNlIFphcHBlclRva2VuTm9kZSB7XG4gIHRva2VuQWRkcmVzczogc3RyaW5nO1xuICBzeW1ib2w6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBiYWxhbmNlOiBudW1iZXI7XG4gIGJhbGFuY2VVU0Q6IG51bWJlcjtcbiAgcHJpY2U6IG51bWJlcjtcbiAgaW1nVXJsVjI6IHN0cmluZztcbiAgbmV0d29yazogeyBuYW1lOiBzdHJpbmcgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb2tlblByaWNlRGF0YSB7XG4gIGFkZHJlc3M6IHN0cmluZztcbiAgc3ltYm9sOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVjaW1hbHM6IG51bWJlcjtcbiAgaW1hZ2VVcmxWMjogc3RyaW5nO1xuICBwcmljZTogbnVtYmVyO1xuICBwcmljZUNoYW5nZTI0aDogbnVtYmVyO1xuICBtYXJrZXRDYXA6IG51bWJlcjtcbiAgdm9sdW1lMjRoOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVmaUluZm8ge1xuICBkaXNwbGF5TmFtZTogc3RyaW5nO1xuICBsb2dvVXJsOiBzdHJpbmc7XG4gIG5ldHdvcms6IHN0cmluZztcbiAgYmFsYW5jZVVTRDogbnVtYmVyO1xuICBwb3NpdGlvbnM6IEFycmF5PHtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgZ3JvdXBMYWJlbDogc3RyaW5nIHwgbnVsbDtcbiAgICB0b2tlbnM6IEFycmF5PHtcbiAgICAgIHN5bWJvbDogc3RyaW5nO1xuICAgICAgcHJpY2U6IG51bWJlcjtcbiAgICB9PjtcbiAgfT47XG59XG5cbi8vIOqzte2GtSBHcmFwaFFMIOyXlOuTnO2PrOyduO2KuFxuY29uc3QgQVBJX1VSTCA9ICdodHRwczovL3B1YmxpYy56YXBwZXIueHl6L2dyYXBocWwnO1xuXG4vKipcbiAqIERlRmkg7JWxIO2PrOyngOyFmChBcHAgQmFsYW5jZSkg7KGw7ZqMXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFphcHBlckFwcEJhbGFuY2VzKFxuICBhZGRyZXNzOiBzdHJpbmcsXG4gIGZpcnN0OiBudW1iZXIgPSAyMFxuKTogUHJvbWlzZTxEZWZpSW5mb1tdPiB7XG4gIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZO1xuICBpZiAoIWFwaUtleSkgdGhyb3cgbmV3IEVycm9yKCdaYXBwZXIgQVBJIO2CpOqwgCDsl4bsirXri4jri6QuJyk7XG5cbiAgY29uc3QgcXVlcnkgPSBgXG4gICAgcXVlcnkgQXBwQmFsYW5jZXMoJGFkZHJlc3NlczogW0FkZHJlc3MhXSEsICRmaXJzdDogSW50ISkge1xuICAgICAgcG9ydGZvbGlvVjIoYWRkcmVzc2VzOiAkYWRkcmVzc2VzKSB7XG4gICAgICAgIGFwcEJhbGFuY2VzIHtcbiAgICAgICAgICBieUFwcChmaXJzdDogJGZpcnN0KSB7XG4gICAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICAgIG5vZGUge1xuICAgICAgICAgICAgICAgIGJhbGFuY2VVU0RcbiAgICAgICAgICAgICAgICBhcHAge1xuICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWVcbiAgICAgICAgICAgICAgICAgIGltZ1VybFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXR3b3JrIHtcbiAgICAgICAgICAgICAgICAgIG5hbWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcG9zaXRpb25CYWxhbmNlcyhmaXJzdDogJGZpcnN0KSB7XG4gICAgICAgICAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUge1xuICAgICAgICAgICAgICAgICAgICAgIC4uLiBvbiBBcHBUb2tlblBvc2l0aW9uQmFsYW5jZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlXG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cExhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlVVNEXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmljZVxuICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5zIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3ltYm9sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHByaWNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIC4uLiBvbiBDb250cmFjdFBvc2l0aW9uQmFsYW5jZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlXG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cExhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlVVNEXG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbnMge1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ltYm9sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgYDtcblxuICBjb25zdCB2YXJpYWJsZXMgPSB7XG4gICAgYWRkcmVzc2VzOiBbYWRkcmVzc10sXG4gICAgZmlyc3RcbiAgfTtcblxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChBUElfVVJMLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICd4LXphcHBlci1hcGkta2V5JzogYXBpS2V5LFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBxdWVyeSwgdmFyaWFibGVzIH0pLFxuICB9KTtcblxuICBpZiAoIXJlcy5vaykge1xuICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgIGNvbnNvbGUuZXJyb3IoJ1phcHBlciBBcHBCYWxhbmNlcyDsmKTrpZg6JywgdGV4dCk7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBaYXBwZXIgQVBJIOyYpOulmDogJHtyZXMuc3RhdHVzVGV4dH1gKTtcbiAgfVxuXG4gIGNvbnN0IHsgZGF0YSwgZXJyb3JzIH0gPSBhd2FpdCByZXMuanNvbigpO1xuICBpZiAoZXJyb3JzKSB7XG4gICAgY29uc29sZS5lcnJvcignR3JhcGhRTCBBcHBCYWxhbmNlcyDsmKTrpZg6JywgZXJyb3JzKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1phcHBlciBBcHBCYWxhbmNlcyDsobDtmowg7KSRIEdyYXBoUUwg7Jik66WYIOuwnOyDnScpO1xuICB9XG5cbiAgcmV0dXJuIGRhdGEucG9ydGZvbGlvVjIuYXBwQmFsYW5jZXMuYnlBcHAuZWRnZXMubWFwKChlOiBhbnkpID0+IHtcbiAgICBjb25zdCBub2RlID0gZS5ub2RlO1xuICAgIHJldHVybiB7XG4gICAgICBkaXNwbGF5TmFtZTogbm9kZS5hcHAuZGlzcGxheU5hbWUsXG4gICAgICBsb2dvVXJsOiBub2RlLmFwcC5pbWdVcmwsXG4gICAgICBuZXR3b3JrOiBub2RlLm5ldHdvcmsubmFtZSxcbiAgICAgIGJhbGFuY2VVU0Q6IG5vZGUuYmFsYW5jZVVTRCxcbiAgICAgIHBvc2l0aW9uczogbm9kZS5wb3NpdGlvbkJhbGFuY2VzLmVkZ2VzLm1hcCgocDogYW55KSA9PiAoe1xuICAgICAgICB0eXBlOiBwLm5vZGUudHlwZSxcbiAgICAgICAgZ3JvdXBMYWJlbDogcC5ub2RlLmdyb3VwTGFiZWwsXG4gICAgICAgIHRva2VuczogcC5ub2RlLnRva2Vucy5tYXAoKHQ6IGFueSkgPT4gKHtcbiAgICAgICAgICBzeW1ib2w6IHQuc3ltYm9sIHx8IHQudG9rZW4uc3ltYm9sLFxuICAgICAgICAgIHByaWNlOiB0LnByaWNlIHx8IHQudG9rZW4ucHJpY2UsXG4gICAgICAgIH0pKSxcbiAgICAgIH0pKSxcbiAgICB9O1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJBUElfVVJMIiwiZmV0Y2haYXBwZXJBcHBCYWxhbmNlcyIsImFkZHJlc3MiLCJmaXJzdCIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19aQVBQRVJfQVBJX0tFWSIsIkVycm9yIiwicXVlcnkiLCJ2YXJpYWJsZXMiLCJhZGRyZXNzZXMiLCJyZXMiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwidGV4dCIsImNvbnNvbGUiLCJlcnJvciIsInN0YXR1c1RleHQiLCJkYXRhIiwiZXJyb3JzIiwianNvbiIsInBvcnRmb2xpb1YyIiwiYXBwQmFsYW5jZXMiLCJieUFwcCIsImVkZ2VzIiwibWFwIiwiZSIsIm5vZGUiLCJkaXNwbGF5TmFtZSIsImFwcCIsImxvZ29VcmwiLCJpbWdVcmwiLCJuZXR3b3JrIiwibmFtZSIsImJhbGFuY2VVU0QiLCJwb3NpdGlvbnMiLCJwb3NpdGlvbkJhbGFuY2VzIiwicCIsInR5cGUiLCJncm91cExhYmVsIiwidG9rZW5zIiwidCIsInN5bWJvbCIsInRva2VuIiwicHJpY2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/zapper.ts\n"));

/***/ })

});