"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/lib/zapper.ts":
/*!***************************!*\
  !*** ./src/lib/zapper.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchZapperPortfolio: () => (/* binding */ fetchZapperPortfolio)\n/* harmony export */ });\n// src/lib/zapper.ts\nasync function fetchZapperPortfolio(address) {\n    const API_URL = 'https://public.zapper.xyz/graphql';\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    const query = \"\\n    query PortfolioV2($addresses: [Address!]!, $networks: [Network!]!) {\\n      portfolioV2(addresses: $addresses, networks: $networks) {\\n        tokenBalances {\\n          byToken {\\n            edges {\\n              node {\\n                symbol\\n                name\\n                balance\\n                balanceUSD\\n                price\\n                imgUrlV2\\n                network { name }\\n                address           # 토큰 컨트랙트 주소\\n                network { chainId } # 체인 ID\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \";\n    // 1. 지갑 포트폴리오 조회\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-zapper-api-key': apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables: {\n                addresses: [\n                    address\n                ],\n                networks: [\n                    'BERACHAIN_MAINNET'\n                ]\n            }\n        })\n    });\n    if (!res.ok) throw new Error(\"Zapper Portfolio 오류: \".concat(res.statusText));\n    const { data, errors } = await res.json();\n    if (errors) throw new Error('Zapper Portfolio GraphQL 오류');\n    // 2. 24h 변동량을 별도 Onchain Prices 엔드포인트에서 병렬로 가져오기\n    const nodes = data.portfolioV2.tokenBalances.byToken.edges.map((e)=>e.node);\n    const withChange = await Promise.all(nodes.map(async (n)=>{\n        var _priceData_fungibleTokenV2_price, _priceData_fungibleTokenV2;\n        // fungibleTokenV2 호출\n        const priceRes = await fetch('https://public.zapper.xyz/graphql', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-zapper-api-key': apiKey\n            },\n            body: JSON.stringify({\n                query: \"\\n            query Price($address: String!, $chainId: Int!) {\\n              fungibleTokenV2(address: $address, chainId: $chainId) {\\n                price {\\n                  change24h\\n                }\\n              }\\n            }\\n          \",\n                variables: {\n                    address: n.address,\n                    chainId: n.chainId\n                }\n            })\n        });\n        const { data: priceData } = await priceRes.json();\n        var _priceData_fungibleTokenV2_price_change24h;\n        const change24h = (_priceData_fungibleTokenV2_price_change24h = (_priceData_fungibleTokenV2 = priceData.fungibleTokenV2) === null || _priceData_fungibleTokenV2 === void 0 ? void 0 : (_priceData_fungibleTokenV2_price = _priceData_fungibleTokenV2.price) === null || _priceData_fungibleTokenV2_price === void 0 ? void 0 : _priceData_fungibleTokenV2_price.change24h) !== null && _priceData_fungibleTokenV2_price_change24h !== void 0 ? _priceData_fungibleTokenV2_price_change24h : 0;\n        return {\n            symbol: n.symbol,\n            name: n.name,\n            balance: n.balance,\n            balanceUSD: n.balanceUSD,\n            price: n.price,\n            imgUrlV2: n.imgUrlV2,\n            network: n.network,\n            change24h\n        };\n    }));\n    return withChange;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9saWIvemFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxvQkFBb0I7QUF5QmIsZUFBZUEscUJBQXFCQyxPQUFlO0lBQ3hELE1BQU1DLFVBQVU7SUFDaEIsTUFBTUMsU0FBVUMsc0NBQXNDO0lBQ3RELE1BQU1HLFFBQVM7SUF1QmYsaUJBQWlCO0lBQ2pCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTVAsU0FBUztRQUMvQlEsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQW9CO1lBQ3BCLG9CQUFvQlI7UUFDdEI7UUFDQVMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ25CUDtZQUNBUSxXQUFXO2dCQUNUQyxXQUFXO29CQUFDZjtpQkFBUTtnQkFDcEJnQixVQUFVO29CQUFDO2lCQUFvQjtZQUNqQztRQUNGO0lBQ0Y7SUFDQSxJQUFJLENBQUNULElBQUlVLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sd0JBQXVDLE9BQWZYLElBQUlZLFVBQVU7SUFDbkUsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFJLE1BQU1kLElBQUllLElBQUk7SUFDeEMsSUFBSUQsUUFBUSxNQUFNLElBQUlILE1BQU07SUFFNUIsaURBQWlEO0lBQ2pELE1BQU1LLFFBQVFILEtBQUtJLFdBQVcsQ0FBQ0MsYUFBYSxDQUFDQyxPQUFPLENBQUNDLEtBQUssQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJO0lBQzFFLE1BQU1DLGFBQWEsTUFBTUMsUUFBUUMsR0FBRyxDQUNsQ1YsTUFBTUssR0FBRyxDQUFDLE9BQU1NO1lBeUJJQyxrQ0FBQUE7UUF4QmxCLHFCQUFxQjtRQUNyQixNQUFNQyxXQUFXLE1BQU01QixNQUFNLHFDQUFxQztZQUNoRUMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFvQjtnQkFDcEIsb0JBQW9CUjtZQUN0QjtZQUNBUyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CUCxPQUFRO2dCQVNSUSxXQUFXO29CQUNUZCxTQUFTa0MsRUFBRWxDLE9BQU87b0JBQ2xCcUMsU0FBU0gsRUFBRUcsT0FBTztnQkFDcEI7WUFDRjtRQUNGO1FBQ0EsTUFBTSxFQUFFakIsTUFBTWUsU0FBUyxFQUFFLEdBQUcsTUFBTUMsU0FBU2QsSUFBSTtZQUM3QmE7UUFBbEIsTUFBTUcsWUFBWUgsQ0FBQUEsOENBQUFBLDZCQUFBQSxVQUFVSSxlQUFlLGNBQXpCSixrREFBQUEsbUNBQUFBLDJCQUEyQkssS0FBSyxjQUFoQ0wsdURBQUFBLGlDQUFrQ0csU0FBUyxjQUEzQ0gsd0RBQUFBLDZDQUErQztRQUNqRSxPQUFPO1lBQ0xNLFFBQWlCUCxFQUFFTyxNQUFNO1lBQ3pCQyxNQUFpQlIsRUFBRVEsSUFBSTtZQUN2QkMsU0FBaUJULEVBQUVTLE9BQU87WUFDMUJDLFlBQWlCVixFQUFFVSxVQUFVO1lBQzdCSixPQUFpQk4sRUFBRU0sS0FBSztZQUN4QkssVUFBaUJYLEVBQUVXLFFBQVE7WUFDM0JDLFNBQWlCWixFQUFFWSxPQUFPO1lBQzFCUjtRQUNGO0lBQ0Y7SUFHRixPQUFPUDtBQUNUIiwic291cmNlcyI6WyIvVXNlcnMvc2hpb2huL1Byb2plY3QvZGVmaS1tb25pdG9yL3NyYy9saWIvemFwcGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvemFwcGVyLnRzXG5leHBvcnQgaW50ZXJmYWNlIFphcHBlclRva2VuTm9kZSB7XG4gIHN5bWJvbDogICAgICBzdHJpbmc7XG4gIG5hbWU6ICAgICAgICBzdHJpbmc7XG4gIGJhbGFuY2U6ICAgICBudW1iZXI7XG4gIGJhbGFuY2VVU0Q6ICBudW1iZXI7XG4gIHByaWNlOiAgICAgICBudW1iZXI7XG4gIGltZ1VybFYyOiAgICBzdHJpbmc7XG4gIG5ldHdvcms6ICAgICB7IG5hbWU6IHN0cmluZyB9O1xuICBjaGFuZ2UyNGg6ICAgbnVtYmVyOyAgICAvLyDihpAg7Iug6recIO2VhOuTnFxuICBjb250cmFjdEFkZHJlc3M6IHN0cmluZzsgLy8gZnVuZ2libGVQcmljZSDtmLjstpzsl5Ag7ZWE7JqUXG59XG5cbmludGVyZmFjZSBaYXBwZXJQb3J0Zm9saW9SZXNwb25zZSB7XG4gIGRhdGE6IHtcbiAgICBwb3J0Zm9saW9WMjoge1xuICAgICAgdG9rZW5CYWxhbmNlczoge1xuICAgICAgICBieVRva2VuOiB7XG4gICAgICAgICAgZWRnZXM6IHsgbm9kZTogT21pdDxaYXBwZXJUb2tlbk5vZGUsJ2NoYW5nZTI0aCd8J2NvbnRyYWN0QWRkcmVzcyc+ICYgeyBhZGRyZXNzOiBzdHJpbmc7IGNoYWluSWQ6IG51bWJlciB9IH1bXTtcbiAgICAgICAgfTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoWmFwcGVyUG9ydGZvbGlvKGFkZHJlc3M6IHN0cmluZyk6IFByb21pc2U8WmFwcGVyVG9rZW5Ob2RlW10+IHtcbiAgY29uc3QgQVBJX1VSTCA9ICdodHRwczovL3B1YmxpYy56YXBwZXIueHl6L2dyYXBocWwnO1xuICBjb25zdCBhcGlLZXkgID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfWkFQUEVSX0FQSV9LRVkhO1xuICBjb25zdCBxdWVyeSA9IGBcbiAgICBxdWVyeSBQb3J0Zm9saW9WMigkYWRkcmVzc2VzOiBbQWRkcmVzcyFdISwgJG5ldHdvcmtzOiBbTmV0d29yayFdISkge1xuICAgICAgcG9ydGZvbGlvVjIoYWRkcmVzc2VzOiAkYWRkcmVzc2VzLCBuZXR3b3JrczogJG5ldHdvcmtzKSB7XG4gICAgICAgIHRva2VuQmFsYW5jZXMge1xuICAgICAgICAgIGJ5VG9rZW4ge1xuICAgICAgICAgICAgZWRnZXMge1xuICAgICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgICBzeW1ib2xcbiAgICAgICAgICAgICAgICBuYW1lXG4gICAgICAgICAgICAgICAgYmFsYW5jZVxuICAgICAgICAgICAgICAgIGJhbGFuY2VVU0RcbiAgICAgICAgICAgICAgICBwcmljZVxuICAgICAgICAgICAgICAgIGltZ1VybFYyXG4gICAgICAgICAgICAgICAgbmV0d29yayB7IG5hbWUgfVxuICAgICAgICAgICAgICAgIGFkZHJlc3MgICAgICAgICAgICMg7Yag7YGwIOy7qO2KuOueme2KuCDso7zshoxcbiAgICAgICAgICAgICAgICBuZXR3b3JrIHsgY2hhaW5JZCB9ICMg7LK07J24IElEXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIGA7XG4gIC8vIDEuIOyngOqwkSDtj6ztirjtj7TrpqzsmKQg7KGw7ZqMXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKEFQSV9VUkwsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQ29udGVudC1UeXBlJzogICAgICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICd4LXphcHBlci1hcGkta2V5JzogYXBpS2V5LFxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcXVlcnksXG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgYWRkcmVzc2VzOiBbYWRkcmVzc10sXG4gICAgICAgIG5ldHdvcmtzOiBbJ0JFUkFDSEFJTl9NQUlOTkVUJ10sIC8vIO2VhOyalOyXkCDrlLDrnbwg66mA7YuwIOyytOyduOycvOuhnCDtmZXsnqVcbiAgICAgIH0sXG4gICAgfSksXG4gIH0pO1xuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGBaYXBwZXIgUG9ydGZvbGlvIOyYpOulmDogJHtyZXMuc3RhdHVzVGV4dH1gKTtcbiAgY29uc3QgeyBkYXRhLCBlcnJvcnMgfSA9IChhd2FpdCByZXMuanNvbigpKSBhcyBaYXBwZXJQb3J0Zm9saW9SZXNwb25zZSAmIHsgZXJyb3JzPzogYW55IH07XG4gIGlmIChlcnJvcnMpIHRocm93IG5ldyBFcnJvcignWmFwcGVyIFBvcnRmb2xpbyBHcmFwaFFMIOyYpOulmCcpO1xuXG4gIC8vIDIuIDI0aCDrs4Drj5nrn4nsnYQg67OE64+EIE9uY2hhaW4gUHJpY2VzIOyXlOuTnO2PrOyduO2KuOyXkOyEnCDrs5HroKzroZwg6rCA7KC47Jik6riwXG4gIGNvbnN0IG5vZGVzID0gZGF0YS5wb3J0Zm9saW9WMi50b2tlbkJhbGFuY2VzLmJ5VG9rZW4uZWRnZXMubWFwKGUgPT4gZS5ub2RlKTtcbiAgY29uc3Qgd2l0aENoYW5nZSA9IGF3YWl0IFByb21pc2UuYWxsKFxuICAgIG5vZGVzLm1hcChhc3luYyBuID0+IHtcbiAgICAgIC8vIGZ1bmdpYmxlVG9rZW5WMiDtmLjstpxcbiAgICAgIGNvbnN0IHByaWNlUmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcHVibGljLnphcHBlci54eXovZ3JhcGhxbCcsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogICAgICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAneC16YXBwZXItYXBpLWtleSc6IGFwaUtleSxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIHF1ZXJ5OiBgXG4gICAgICAgICAgICBxdWVyeSBQcmljZSgkYWRkcmVzczogU3RyaW5nISwgJGNoYWluSWQ6IEludCEpIHtcbiAgICAgICAgICAgICAgZnVuZ2libGVUb2tlblYyKGFkZHJlc3M6ICRhZGRyZXNzLCBjaGFpbklkOiAkY2hhaW5JZCkge1xuICAgICAgICAgICAgICAgIHByaWNlIHtcbiAgICAgICAgICAgICAgICAgIGNoYW5nZTI0aFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIGAsXG4gICAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgICBhZGRyZXNzOiBuLmFkZHJlc3MsXG4gICAgICAgICAgICBjaGFpbklkOiBuLmNoYWluSWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSksXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHsgZGF0YTogcHJpY2VEYXRhIH0gPSBhd2FpdCBwcmljZVJlcy5qc29uKCkgYXMgeyBkYXRhOiBhbnkgfTtcbiAgICAgIGNvbnN0IGNoYW5nZTI0aCA9IHByaWNlRGF0YS5mdW5naWJsZVRva2VuVjI/LnByaWNlPy5jaGFuZ2UyNGggPz8gMDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN5bWJvbDogICAgICAgICAgbi5zeW1ib2wsXG4gICAgICAgIG5hbWU6ICAgICAgICAgICAgbi5uYW1lLFxuICAgICAgICBiYWxhbmNlOiAgICAgICAgIG4uYmFsYW5jZSxcbiAgICAgICAgYmFsYW5jZVVTRDogICAgICBuLmJhbGFuY2VVU0QsXG4gICAgICAgIHByaWNlOiAgICAgICAgICAgbi5wcmljZSxcbiAgICAgICAgaW1nVXJsVjI6ICAgICAgICBuLmltZ1VybFYyLFxuICAgICAgICBuZXR3b3JrOiAgICAgICAgIG4ubmV0d29yayxcbiAgICAgICAgY2hhbmdlMjRoLFxuICAgICAgfSBhcyBaYXBwZXJUb2tlbk5vZGU7XG4gICAgfSlcbiAgKTtcblxuICByZXR1cm4gd2l0aENoYW5nZTtcbn1cbiJdLCJuYW1lcyI6WyJmZXRjaFphcHBlclBvcnRmb2xpbyIsImFkZHJlc3MiLCJBUElfVVJMIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZIiwicXVlcnkiLCJyZXMiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInZhcmlhYmxlcyIsImFkZHJlc3NlcyIsIm5ldHdvcmtzIiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJkYXRhIiwiZXJyb3JzIiwianNvbiIsIm5vZGVzIiwicG9ydGZvbGlvVjIiLCJ0b2tlbkJhbGFuY2VzIiwiYnlUb2tlbiIsImVkZ2VzIiwibWFwIiwiZSIsIm5vZGUiLCJ3aXRoQ2hhbmdlIiwiUHJvbWlzZSIsImFsbCIsIm4iLCJwcmljZURhdGEiLCJwcmljZVJlcyIsImNoYWluSWQiLCJjaGFuZ2UyNGgiLCJmdW5naWJsZVRva2VuVjIiLCJwcmljZSIsInN5bWJvbCIsIm5hbWUiLCJiYWxhbmNlIiwiYmFsYW5jZVVTRCIsImltZ1VybFYyIiwibmV0d29yayJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/zapper.ts\n"));

/***/ })

});