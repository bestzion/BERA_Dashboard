"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/lib/zapper.ts":
/*!***************************!*\
  !*** ./src/lib/zapper.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTokenPrice: () => (/* binding */ fetchTokenPrice),\n/* harmony export */   fetchZapperPortfolio: () => (/* binding */ fetchZapperPortfolio)\n/* harmony export */ });\nconst API_URL = 'https://public.zapper.xyz/graphql';\n// 1) 포트폴리오 조회 (잔고 + 기본 시세)\nasync function fetchZapperPortfolio(address) {\n    let first = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    if (!apiKey) throw new Error('Zapper API 키가 없습니다.');\n    const query = \"\\n      query PortfolioV2($addresses: [Address!]!, $networks: [Network!]!, $first: Int!) {\\n        portfolioV2(addresses: $addresses, networks: $networks) {\\n          tokenBalances {\\n            byToken(first: $first) {\\n              edges {\\n                node {\\n                  address\\n                  symbol\\n                  name\\n                  balance\\n                  balanceUSD\\n                  price\\n                  imgUrlV2\\n                  network { name chainId }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    \";\n    const variables = {\n        addresses: [\n            address\n        ],\n        networks: [\n            'BERACHAIN_MAINNET'\n        ],\n        first\n    };\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-zapper-api-key': apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables\n        })\n    });\n    if (!res.ok) {\n        const text = await res.text();\n        throw new Error(\"fetchPortfolio 오류: \".concat(text));\n    }\n    const { data, errors } = await res.json();\n    if (errors) {\n        console.error(errors);\n        throw new Error('GraphQL PortfolioV2 오류 발생');\n    }\n    return data.portfolioV2.tokenBalances.byToken.edges.map((e)=>e.node);\n}\n// 2) 온체인 24h 변동량 조회\nasync function fetchTokenPrice(tokenAddress, chainId) {\n    const apiKey = \"e148aa30-9b00-48f5-9b05-fd1d24d4ed2e\";\n    if (!apiKey) throw new Error('Zapper API 키가 없습니다.');\n    const query = \"\\n      query PriceData($address: Address!, $chainId: Int!) {\\n        fungibleTokenV2(address: $address, chainId: $chainId) {\\n          address\\n          symbol\\n          name\\n          priceData { price priceChange24h }\\n        }\\n      }\\n    \";\n    const variables = {\n        address: tokenAddress,\n        chainId\n    };\n    const res = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'x-zapper-api-key': apiKey\n        },\n        body: JSON.stringify({\n            query,\n            variables\n        })\n    });\n    const text = await res.text();\n    if (!res.ok) throw new Error(\"fetchPrice 오류: \".concat(text));\n    const { data, errors } = JSON.parse(text);\n    if (errors) throw new Error('GraphQL PriceData 오류');\n    const node = data.fungibleTokenV2;\n    return {\n        address: node.address,\n        symbol: node.symbol,\n        name: node.name,\n        price: node.priceData.price,\n        priceChange24h: node.priceData.priceChange24h\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9saWIvemFwcGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBbUJFLE1BQU1BLFVBQVU7QUFFaEIsMkJBQTJCO0FBQ3BCLGVBQWVDLHFCQUNwQkMsT0FBZTtRQUNmQyxRQUFBQSxpRUFBZ0I7SUFFaEIsTUFBTUMsU0FBU0Msc0NBQXNDO0lBQ3JELElBQUksQ0FBQ0QsUUFBUSxNQUFNLElBQUlJLE1BQU07SUFFN0IsTUFBTUMsUUFBUztJQXVCZixNQUFNQyxZQUFZO1FBQ2hCQyxXQUFXO1lBQUNUO1NBQVE7UUFDcEJVLFVBQVU7WUFBQztTQUFvQjtRQUMvQlQ7SUFDRjtJQUVBLE1BQU1VLE1BQU0sTUFBTUMsTUFBTWQsU0FBUztRQUMvQmUsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1lBQ2hCLG9CQUFvQlo7UUFDdEI7UUFDQWEsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVWO1lBQU9DO1FBQVU7SUFDMUM7SUFDQSxJQUFJLENBQUNHLElBQUlPLEVBQUUsRUFBRTtRQUNYLE1BQU1DLE9BQU8sTUFBTVIsSUFBSVEsSUFBSTtRQUMzQixNQUFNLElBQUliLE1BQU0sc0JBQTJCLE9BQUxhO0lBQ3hDO0lBRUEsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1WLElBQUlXLElBQUk7SUFDdkMsSUFBSUQsUUFBUTtRQUNWRSxRQUFRQyxLQUFLLENBQUNIO1FBQ2QsTUFBTSxJQUFJZixNQUFNO0lBQ2xCO0lBRUEsT0FBT2MsS0FBS0ssV0FBVyxDQUFDQyxhQUFhLENBQUNDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsSUFBV0EsRUFBRUMsSUFBSTtBQUM1RTtBQUVBLG9CQUFvQjtBQUNiLGVBQWVDLGdCQUNwQkMsWUFBb0IsRUFDcEJDLE9BQWU7SUFFZixNQUFNaEMsU0FBU0Msc0NBQXNDO0lBQ3JELElBQUksQ0FBQ0QsUUFBUSxNQUFNLElBQUlJLE1BQU07SUFFN0IsTUFBTUMsUUFBUztJQVdmLE1BQU1DLFlBQVk7UUFBRVIsU0FBU2lDO1FBQWNDO0lBQVE7SUFDbkQsTUFBTXZCLE1BQU0sTUFBTUMsTUFBTWQsU0FBUztRQUMvQmUsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsZ0JBQWdCO1lBQ2hCLG9CQUFvQlo7UUFDdEI7UUFDQWEsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVWO1lBQU9DO1FBQVU7SUFDMUM7SUFDQSxNQUFNVyxPQUFPLE1BQU1SLElBQUlRLElBQUk7SUFDM0IsSUFBSSxDQUFDUixJQUFJTyxFQUFFLEVBQUUsTUFBTSxJQUFJWixNQUFNLGtCQUF1QixPQUFMYTtJQUMvQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFLEdBQUdMLEtBQUttQixLQUFLLENBQUNoQjtJQUNwQyxJQUFJRSxRQUFRLE1BQU0sSUFBSWYsTUFBTTtJQUU1QixNQUFNeUIsT0FBT1gsS0FBS2dCLGVBQWU7SUFDakMsT0FBTztRQUFFcEMsU0FBUytCLEtBQUsvQixPQUFPO1FBQUVxQyxRQUFRTixLQUFLTSxNQUFNO1FBQUVDLE1BQU1QLEtBQUtPLElBQUk7UUFBRUMsT0FBT1IsS0FBS1MsU0FBUyxDQUFDRCxLQUFLO1FBQUVFLGdCQUFnQlYsS0FBS1MsU0FBUyxDQUFDQyxjQUFjO0lBQUM7QUFDbkoiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGlvaG4vUHJvamVjdC9kZWZpLW1vbml0b3Ivc3JjL2xpYi96YXBwZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBaYXBwZXJUb2tlbk5vZGUge1xuICAgIGFkZHJlc3M6IHN0cmluZztcbiAgICBzeW1ib2w6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgYmFsYW5jZTogbnVtYmVyO1xuICAgIGJhbGFuY2VVU0Q6IG51bWJlcjtcbiAgICBwcmljZTogbnVtYmVyO1xuICAgIGltZ1VybFYyOiBzdHJpbmc7XG4gICAgbmV0d29yazogeyBuYW1lOiBzdHJpbmc7IGNoYWluSWQ6IG51bWJlciB9O1xuICB9XG4gIFxuICBleHBvcnQgaW50ZXJmYWNlIFRva2VuUHJpY2VEYXRhIHtcbiAgICBhZGRyZXNzOiBzdHJpbmc7XG4gICAgc3ltYm9sOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHByaWNlOiBudW1iZXI7XG4gICAgcHJpY2VDaGFuZ2UyNGg6IG51bWJlcjtcbiAgfVxuICBcbiAgY29uc3QgQVBJX1VSTCA9ICdodHRwczovL3B1YmxpYy56YXBwZXIueHl6L2dyYXBocWwnO1xuICBcbiAgLy8gMSkg7Y+s7Yq47Y+066as7JikIOyhsO2ajCAo7J6U6rOgICsg6riw67O4IOyLnOyEuClcbiAgZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoWmFwcGVyUG9ydGZvbGlvKFxuICAgIGFkZHJlc3M6IHN0cmluZyxcbiAgICBmaXJzdDogbnVtYmVyID0gNTBcbiAgKTogUHJvbWlzZTxaYXBwZXJUb2tlbk5vZGVbXT4ge1xuICAgIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZO1xuICAgIGlmICghYXBpS2V5KSB0aHJvdyBuZXcgRXJyb3IoJ1phcHBlciBBUEkg7YKk6rCAIOyXhuyKteuLiOuLpC4nKTtcbiAgXG4gICAgY29uc3QgcXVlcnkgPSBgXG4gICAgICBxdWVyeSBQb3J0Zm9saW9WMigkYWRkcmVzc2VzOiBbQWRkcmVzcyFdISwgJG5ldHdvcmtzOiBbTmV0d29yayFdISwgJGZpcnN0OiBJbnQhKSB7XG4gICAgICAgIHBvcnRmb2xpb1YyKGFkZHJlc3NlczogJGFkZHJlc3NlcywgbmV0d29ya3M6ICRuZXR3b3Jrcykge1xuICAgICAgICAgIHRva2VuQmFsYW5jZXMge1xuICAgICAgICAgICAgYnlUb2tlbihmaXJzdDogJGZpcnN0KSB7XG4gICAgICAgICAgICAgIGVkZ2VzIHtcbiAgICAgICAgICAgICAgICBub2RlIHtcbiAgICAgICAgICAgICAgICAgIGFkZHJlc3NcbiAgICAgICAgICAgICAgICAgIHN5bWJvbFxuICAgICAgICAgICAgICAgICAgbmFtZVxuICAgICAgICAgICAgICAgICAgYmFsYW5jZVxuICAgICAgICAgICAgICAgICAgYmFsYW5jZVVTRFxuICAgICAgICAgICAgICAgICAgcHJpY2VcbiAgICAgICAgICAgICAgICAgIGltZ1VybFYyXG4gICAgICAgICAgICAgICAgICBuZXR3b3JrIHsgbmFtZSBjaGFpbklkIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICBcbiAgICBjb25zdCB2YXJpYWJsZXMgPSB7XG4gICAgICBhZGRyZXNzZXM6IFthZGRyZXNzXSxcbiAgICAgIG5ldHdvcmtzOiBbJ0JFUkFDSEFJTl9NQUlOTkVUJ10sXG4gICAgICBmaXJzdCxcbiAgICB9O1xuICBcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChBUElfVVJMLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ3gtemFwcGVyLWFwaS1rZXknOiBhcGlLZXksXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBxdWVyeSwgdmFyaWFibGVzIH0pLFxuICAgIH0pO1xuICAgIGlmICghcmVzLm9rKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gYXdhaXQgcmVzLnRleHQoKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgZmV0Y2hQb3J0Zm9saW8g7Jik66WYOiAke3RleHR9YCk7XG4gICAgfVxuICBcbiAgICBjb25zdCB7IGRhdGEsIGVycm9ycyB9ID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9ycyk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dyYXBoUUwgUG9ydGZvbGlvVjIg7Jik66WYIOuwnOyDnScpO1xuICAgIH1cbiAgXG4gICAgcmV0dXJuIGRhdGEucG9ydGZvbGlvVjIudG9rZW5CYWxhbmNlcy5ieVRva2VuLmVkZ2VzLm1hcCgoZTogYW55KSA9PiBlLm5vZGUpO1xuICB9XG4gIFxuICAvLyAyKSDsmKjssrTsnbggMjRoIOuzgOuPmeufiSDsobDtmoxcbiAgZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoVG9rZW5QcmljZShcbiAgICB0b2tlbkFkZHJlc3M6IHN0cmluZyxcbiAgICBjaGFpbklkOiBudW1iZXJcbiAgKTogUHJvbWlzZTxUb2tlblByaWNlRGF0YT4ge1xuICAgIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZO1xuICAgIGlmICghYXBpS2V5KSB0aHJvdyBuZXcgRXJyb3IoJ1phcHBlciBBUEkg7YKk6rCAIOyXhuyKteuLiOuLpC4nKTtcbiAgXG4gICAgY29uc3QgcXVlcnkgPSBgXG4gICAgICBxdWVyeSBQcmljZURhdGEoJGFkZHJlc3M6IEFkZHJlc3MhLCAkY2hhaW5JZDogSW50ISkge1xuICAgICAgICBmdW5naWJsZVRva2VuVjIoYWRkcmVzczogJGFkZHJlc3MsIGNoYWluSWQ6ICRjaGFpbklkKSB7XG4gICAgICAgICAgYWRkcmVzc1xuICAgICAgICAgIHN5bWJvbFxuICAgICAgICAgIG5hbWVcbiAgICAgICAgICBwcmljZURhdGEgeyBwcmljZSBwcmljZUNoYW5nZTI0aCB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgO1xuICBcbiAgICBjb25zdCB2YXJpYWJsZXMgPSB7IGFkZHJlc3M6IHRva2VuQWRkcmVzcywgY2hhaW5JZCB9O1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKEFQSV9VUkwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAneC16YXBwZXItYXBpLWtleSc6IGFwaUtleSxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHF1ZXJ5LCB2YXJpYWJsZXMgfSksXG4gICAgfSk7XG4gICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihgZmV0Y2hQcmljZSDsmKTrpZg6ICR7dGV4dH1gKTtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9ycyB9ID0gSlNPTi5wYXJzZSh0ZXh0KTtcbiAgICBpZiAoZXJyb3JzKSB0aHJvdyBuZXcgRXJyb3IoJ0dyYXBoUUwgUHJpY2VEYXRhIOyYpOulmCcpO1xuICBcbiAgICBjb25zdCBub2RlID0gZGF0YS5mdW5naWJsZVRva2VuVjI7XG4gICAgcmV0dXJuIHsgYWRkcmVzczogbm9kZS5hZGRyZXNzLCBzeW1ib2w6IG5vZGUuc3ltYm9sLCBuYW1lOiBub2RlLm5hbWUsIHByaWNlOiBub2RlLnByaWNlRGF0YS5wcmljZSwgcHJpY2VDaGFuZ2UyNGg6IG5vZGUucHJpY2VEYXRhLnByaWNlQ2hhbmdlMjRoIH07XG4gIH0iXSwibmFtZXMiOlsiQVBJX1VSTCIsImZldGNoWmFwcGVyUG9ydGZvbGlvIiwiYWRkcmVzcyIsImZpcnN0IiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1pBUFBFUl9BUElfS0VZIiwiRXJyb3IiLCJxdWVyeSIsInZhcmlhYmxlcyIsImFkZHJlc3NlcyIsIm5ldHdvcmtzIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJvayIsInRleHQiLCJkYXRhIiwiZXJyb3JzIiwianNvbiIsImNvbnNvbGUiLCJlcnJvciIsInBvcnRmb2xpb1YyIiwidG9rZW5CYWxhbmNlcyIsImJ5VG9rZW4iLCJlZGdlcyIsIm1hcCIsImUiLCJub2RlIiwiZmV0Y2hUb2tlblByaWNlIiwidG9rZW5BZGRyZXNzIiwiY2hhaW5JZCIsInBhcnNlIiwiZnVuZ2libGVUb2tlblYyIiwic3ltYm9sIiwibmFtZSIsInByaWNlIiwicHJpY2VEYXRhIiwicHJpY2VDaGFuZ2UyNGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/lib/zapper.ts\n"));

/***/ })

});